<!DOCTYPE html>
<html lang="en">
   <head>
      {{> headAD }}
   </head>
   <!--end::Head-->
   <!--begin::Body-->
   <body id="kt_app_body" data-kt-app-header-fixed="true" data-kt-app-header-fixed-mobile="true" data-kt-app-sidebar-enabled="true" data-kt-app-sidebar-fixed="true" data-kt-app-sidebar-hoverable="true" data-kt-app-sidebar-push-header="true" data-kt-app-sidebar-push-toolbar="true" data-kt-app-sidebar-push-footer="true" class="app-default">
      <!--begin::Theme mode setup on page load-->
      <!--end::Theme mode setup on page load-->
      <!--begin::App-->
      <div class="d-flex flex-column flex-root app-root" id="kt_app_root">
         <!--begin::Page-->
         <div class="app-page  flex-column flex-column-fluid " id="kt_app_page">
            <!--begin::Header-->
            <div id="kt_app_header" class="app-header ">
               <!--begin::Header container-->
               <div class="app-container  container-fluid d-flex align-items-stretch flex-stack " id="kt_app_header_container">
                  <!--begin::Sidebar toggle-->
                  <div class="d-flex align-items-center d-block d-lg-none ms-n3" title="Show sidebar menu">
                     <div class="btn btn-icon btn-active-color-primary w-35px h-35px me-2" id="kt_app_sidebar_mobile_toggle">
                        <i class="ki-outline ki-abstract-14 fs-2"></i>
                     </div>
                     <!--begin::Logo image-->
                     <a href="https://preview.keenthemes.com/metronic8/demo38/index.html">
                        <img alt="Logo" src="https://preview.keenthemes.com/metronic8/demo38/assets/media/logos/demo38-small.svg" class="h-30px" />
                     </a>
                     <!--end::Logo image-->
                  </div>
                  <!--end::Sidebar toggle-->
                  <!--begin::Navbar-->
                  {{> navbarAD }}
                  <!--end::Navbar-->
                  <!--begin::Separator-->
                  <div class="app-navbar-separator separator d-none d-lg-flex"></div>
                  <!--end::Separator-->
               </div>
               <!--end::Header container-->
            </div>
            <!--end::Header-->
            <!--begin::Wrapper-->
            <div class="app-wrapper  flex-column flex-row-fluid " id="kt_app_wrapper">
               <!--begin::Sidebar-->
               {{> sidebarAD }}
               <!--end::Sidebar-->
               <!--begin::Main-->
               <div class="app-main flex-column flex-row-fluid " id="kt_app_main">
                  <!--begin::Content wrapper-->
                  <div class="d-flex flex-column flex-column-fluid">
                     <!--begin::Content-->
                     <div id="kt_app_content" class="app-content  flex-column-fluid ">
                        <!--begin::Content container-->
                        <div id="kt_app_content_container" class="app-container container-fluid">
                           <h1>Trang quản lý người dùng</h1>
                           <div class="row g-6 mb-6 mt-1">
                              <!-- Box 1: Tổng người dùng -->
                              <div class="col-xl-3">
                                 <div class="card border border-primary border-2 rounded-3 shadow-sm h-100 position-relative overflow-hidden">
                                    <!-- Ảnh nền full box -->
                                    <img src="https://tse3.mm.bing.net/th/id/OIP.np26dCVIomuKCKw5GYFLJwHaFF?r=0&rs=1&pid=ImgDetMain&o=7&rm=3"
                                          alt="Users Icon"
                                          class="position-absolute top-0 start-0 w-100 h-100 object-fit-cover opacity-20" />
                                    <!-- Nội dung hiển thị -->
                                    <div class="card-body d-flex flex-column justify-content-center h-100 py-4 position-relative">
                                       <div class="d-flex justify-content-between align-items-center">
                                          <span class="text-muted fw-semibold fs-5">Tổng người dùng</span>
                                          <span id="stat-totalUsers" class="text-primary fw-bold fs-2">--</span>
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              <!-- Box 2: Hoạt động / Bị khóa -->
                              <div class="col-xl-3">
                                 <div class="card border border-success border-2 rounded-3 shadow-sm h-100 position-relative overflow-hidden">
                                    <!-- Ảnh nền -->
                                    <img src="https://blog.112dijital.com/wp-content/uploads/2021/12/seo-uyumlu-blog-yazisi-1.jpg"
                                          alt="Active Icon"
                                          class="position-absolute top-0 start-0 w-100 h-100 object-fit-cover opacity-15" />

                                    <!-- Nội dung -->
                                    <div class="card-body d-flex flex-column justify-content-center h-100 py-4 position-relative">
                                       <div class="d-flex justify-content-between align-items-center mb-2">
                                       <span class="text-success fw-semibold fs-6">Hoạt động:</span>
                                       <span id="stat-activeUsers" class="text-success fw-bold fs-3">--</span>
                                       </div>
                                       <div class="separator my-2"></div>
                                       <div class="d-flex justify-content-between align-items-center">
                                       <span class="text-danger fw-semibold fs-6">Bị khóa:</span>
                                       <span id="stat-bannedUsers" class="text-danger fw-bold fs-3">--</span>
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              
                              <!-- Box 3: Người dùng mới -->
                              <div class="col-xl-3">
                                 <div class="card card-flush border border-info border-2 shadow-sm h-100 position-relative overflow-hidden">
                                    
                                    <!-- Ảnh nền -->
                                    <img src="https://www.testcenter.vn/blog/wp-content/uploads/2021/07/cats.jpg"
                                          alt="New Users Icon"
                                          class="position-absolute top-0 start-0 w-100 h-100 object-fit-cover opacity-15" />

                                    <!-- Header -->
                                    <div class="card-header d-flex justify-content-between align-items-center py-3 position-relative">
                                       <h3 class="card-title fw-bold text-info fs-5 mb-0">Người dùng mới</h3>
                                       <div class="menu-item px-0">
                                       <a href="#" class="btn btn-sm btn-light btn-icon btn-active-light-info" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                          <i class="fa-solid fa-filter text-info"></i>
                                       </a>
                                       <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-info fw-semibold fs-7 w-150px py-4" data-kt-menu="true">
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="selectNewUserFilter('today')">
                                             <i class="fa-solid fa-calendar-day me-2"></i> Hôm nay
                                             </a>
                                          </div>
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="selectNewUserFilter('month')">
                                             <i class="fa-solid fa-calendar-week me-2"></i> Tháng này
                                             </a>
                                          </div>
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="selectNewUserFilter('year')">
                                             <i class="fa-solid fa-calendar me-2"></i> Năm nay
                                             </a>
                                          </div>
                                       </div>
                                       </div>
                                    </div>

                                    <!-- Body -->
                                    <div class="card-body d-flex align-items-center justify-content-start py-4 position-relative">
                                       <div id="stat-newUsers" class="text-info fw-bolder fs-2">--</div>
                                    </div>
                                 </div>
                              </div>

                              <!-- Box 4: Tổng số dư -->
                              <div class="col-xl-3">
                                 <div class="card border border-dark border-2 rounded-3 shadow-sm h-100 position-relative overflow-hidden">
                                    
                                    <!-- Ảnh nền -->
                                    <img src="https://www.universal-translation-services.com/wp-content/uploads/2021/06/anor.jpg"
                                          alt="Wallet Icon"
                                          class="position-absolute top-0 start-0 w-100 h-100 object-fit-cover opacity-15" />

                                    <!-- Nội dung -->
                                    <div class="card-body d-flex flex-column justify-content-center h-100 py-4 position-relative">
                                       <div class="d-flex justify-content-between align-items-center">
                                       <span class="text-muted fw-semibold fs-5">Tổng số dư</span>
                                       <span id="stat-balance" class="fw-bold text-dark fs-2">-- đ</span>
                                       </div>
                                    </div>
                                 </div>
                              </div> 
                           </div>
                           <!--begin::Content container-->
                           <!--begin::Products-->
                           <div class="card card-flush" bis_skin_checked="1" data-select2-id="select2-data-134-e5aw">
                              <!--begin::Card header-->
                              <!-- 🔍 Search & Filter -->
                              <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                                 <div class="card-title">
                                    <!-- Tìm kiếm tên/email -->
                                    <div class="d-flex align-items-center position-relative my-1">
                                       <i class="fa-brands fa-searchengin position-absolute m-2"></i>
                                       <input type="text" id="search-input" class="form-control form-control-solid w-250px ps-12" placeholder="Tìm kiếm tên, email...">
                                    </div>
                                 </div>
                                 <!-- Sắp xếp & Lọc trạng thái -->
                                 <div class="card-toolbar flex-row-fluid justify-content-end gap-5">
                                    <!-- Filter: Balance -->
                                    <div class="menu-item px-3">
                                       <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"> Balance <i class="fa-solid fa-sort ms-2"></i>
                                       </a>
                                       <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-150px py-4" data-kt-menu="true">
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="filterBalance('asc')">
                                                <i class="fa-solid fa-arrow-up-wide-short me-2"></i> Tăng dần </a>
                                          </div>
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="filterBalance('desc')">
                                                <i class="fa-solid fa-arrow-down-wide-short me-2"></i> Giảm dần </a>
                                          </div>
                                       </div>
                                    </div>
                                    <!-- Filter: Status -->
                                    <div class="menu-item px-3">
                                       <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"> Status <i class="fa-solid fa-filter ms-2"></i>
                                       </a>
                                       <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-150px py-4" data-kt-menu="true">
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="filterStatus('all')">
                                                <i class="fa-solid fa-list me-2"></i> Tất cả </a>
                                          </div>
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="filterStatus('active')">
                                                <i class="fa-solid fa-circle-check me-2 text-success"></i> Active </a>
                                          </div>
                                          <div class="menu-item px-3">
                                             <a href="javascript:void(0)" class="menu-link px-3" onclick="filterStatus('banned')">
                                                <i class="fa-solid fa-ban me-2 text-danger"></i> Banned </a>
                                          </div>
                                       </div>
                                    </div>
                                    <!-- Reset Filters -->
                                    <div class="menu-item px-3">
                                       <a href="javascript:void(0)" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-danger" onclick="resetFilters()"> Reset <i class="fa-solid fa-rotate-left ms-2"></i>
                                       </a>
                                    </div>
                                 </div>
                              </div>
                              <!--end::Card header-->
                              <!--begin::Card body-->
                              <div class="card-body pt-0" bis_skin_checked="1">
                                 <!--begin::Table-->
                                 <div id="kt_ecommerce_products_table_wrapper" class="dt-container dt-bootstrap5 dt-empty-footer" bis_skin_checked="1">
                                    <div id="" class="table-responsive" bis_skin_checked="1">
                                       <table class="table align-middle table-row-dashed fs-6 gy-5 dataTable" id="kt_ecommerce_products_table" style="width: 100%;">
                                          <colgroup>
                                             <col data-dt-column="0" style="width: 36.3906px;">
                                             <col data-dt-column="1" style="width: 200px;">
                                             <!-- Avatar + Tên + Email -->
                                             <col data-dt-column="2" style="width: 100px;">
                                             <!-- Provider -->
                                             <col data-dt-column="3" style="width: 100px;">
                                             <!-- Vai trò -->
                                             <col data-dt-column="4" style="width: 90px;">
                                             <!-- Level -->
                                             <col data-dt-column="5" style="width: 100px;">
                                             <!-- Số dư -->
                                             <col data-dt-column="6" style="width: 105.156px;">
                                             <!-- Trạng thái -->
                                             <col data-dt-column="7" style="width: 100px;">
                                             <!-- Hành động -->
                                          </colgroup>
                                          <thead>
                                             <tr class="text-center text-gray-500 fw-bold fs-7 text-uppercase gs-0">
                                                <th class="w-10px pe-2 dt-orderable-none">
                                                   <div class="form-check form-check-sm form-check-custom form-check-solid me-3">
                                                      <input class="form-check-input" type="checkbox" data-kt-check="true" data-kt-check-target="#kt_ecommerce_products_table .form-check-input" value="1">
                                                   </div>
                                                </th>
                                                <th class="min-w-200px dt-orderable-asc dt-orderable-desc text-center" data-dt-column="1" tabindex="0">
                                                   <span class="dt-column-title" role="button">User</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-100px dt-type-numeric dt-orderable-asc dt-orderable-desc text-center" data-dt-column="3" tabindex="0">
                                                   <span class="dt-column-title" role="button">Email</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-100px dt-type-numeric dt-orderable-asc dt-orderable-desc text-center" data-dt-column="2" tabindex="0">
                                                   <span class="dt-column-title" role="button">Gender</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-70px dt-type-numeric dt-orderable-asc dt-orderable-desc text-center" data-dt-column="4" tabindex="0">
                                                   <span class="dt-column-title" role="button">Level</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-100px dt-type-numeric dt-orderable-asc dt-orderable-desc text-center" data-dt-column="6" tabindex="0">
                                                   <span class="dt-column-title" role="button">Balance</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-100px dt-orderable-asc dt-orderable-desc text-center" data-dt-column="7" tabindex="0">
                                                   <span class="dt-column-title" role="button">Status</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                                <th class="min-w-70px dt-orderable-none text-center" data-dt-column="8">
                                                   <span class="dt-column-title">Actions</span>
                                                   <span class="dt-column-order"></span>
                                                </th>
                                             </tr>
                                          </thead>
                                          <tbody class="fw-semibold text-gray-600 text-center">
                                             {{#each users}}
                                                <tr>
                                                   <td>
                                                      <div class="form-check form-check-sm form-check-custom form-check-solid">
                                                         <input class="form-check-input" type="checkbox" value="{{_id}}">
                                                      </div>
                                                   </td>
                                                   <td>
                                                      <div class="d-flex align-items-center justify-content-center">
                                                         <a href="#" class="symbol symbol-50px">
                                                            <span class="symbol-label" style="background-image:url('{{avatarUrl}}');"></span>
                                                         </a>
                                                         <div class="ms-5">
                                                            <span class="text-gray-800 fs-5 fw-bold">{{name}}</span>
                                                         </div>
                                                      </div>
                                                   </td>
                                                   <td>
                                                      <span class="badge badge-info">{{email}}</span>
                                                   </td>
                                                   <td>
                                                      {{#if (eq gender "male")}}
                                                         <span class="badge badge-primary">Male</span>
                                                      {{else if (eq gender "female")}}
                                                         <span class="badge badge-danger">Female</span>
                                                      {{else}}
                                                         <span class="badge badge-secondary">Other</span>
                                                      {{/if}}
                                                   </td>
                                                   <td>
                                                      {{#if (eq level 1)}}
                                                         <span class="text-muted" title="Mặc định">
                                                            <i class="fa-solid fa-user fa-xl" style="color: #6c757d;"></i>
                                                            <span class="ms-1">Mặc định</span>
                                                         </span>
                                                      {{else if (eq level 2)}}
                                                         <span class="text-bronze" title="Rank Đồng">
                                                            <i class="fa-solid fa-medal fa-xl" style="color: #cd7f32;"></i>
                                                            <span class="ms-1">Rank Đồng</span>
                                                         </span>
                                                      {{else if (eq level 3)}}
                                                         <span class="text-silver" title="Rank Bạc">
                                                            <i class="fa-solid fa-award fa-xl" style="color: #c0c0c0;"></i>
                                                            <span class="ms-1">Rank Bạc</span>
                                                         </span>
                                                      {{else if (eq level 4)}}
                                                         <span class="text-gold" title="Rank Vàng">
                                                            <i class="fa-solid fa-trophy fa-xl" style="color: #ffd700;"></i>
                                                            <span class="ms-1">Rank Vàng</span>
                                                         </span>
                                                      {{else if (eq level 5)}}
                                                         <span class="text-warning" title="Khách VIP">
                                                            <i class="fa-solid fa-crown fa-xl" style="color: #f4c430;"></i>
                                                            <span class="ms-1">Khách VIP</span>
                                                         </span>
                                                      {{/if}}
                                                   </td>
                                                   <td>{{formatVND currentMoney}}</td>
                                                   <td>
                                                      {{#if isBanned}}
                                                         <div class="badge badge-light-danger">Banned</div>
                                                      {{else}}
                                                         <div class="badge badge-light-success">Active</div>
                                                      {{/if}}
                                                   </td>
                                                   <td>
                                                      <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"> Actions <i class="fa-solid fa-gears ms-2"></i>
                                                      </a>
                                                      <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true">
                                                         <div class="menu-item px-3">
                                                            <a href="#" class="menu-link px-3 btn-show-user" data-user-id="{{_id}}">
                                                               <i class="fa-regular fa-rectangle-list me-2"></i> Show </a>
                                                         </div>
                                                         <div class="menu-item px-3">
                                                            <a href="javascript:void(0)" class="menu-link px-3" data-user-id="{{_id}}" onclick="openBalanceModal('{{_id}}', '{{email}}')">
                                                               <i class="fa-solid fa-coins me-2"></i> Balance </a>
                                                         </div>
                                                         {{#if isBanned}}
                                                            <div class="menu-item px-3">
                                                               <a href="javascript:void(0)" class="menu-link px-3 text-success" onclick="unbanUser('{{_id}}')">
                                                                  <i class="fa-solid fa-thumbs-up me-2"></i> Unban </a>
                                                            </div>
                                                         {{else}}
                                                            <div class="menu-item px-3">
                                                               <a href="javascript:void(0)" class="menu-link px-3 text-danger" onclick="banUser('{{_id}}')">
                                                                  <i class="fa-solid fa-thumbs-down me-2"></i> Ban </a>
                                                            </div>
                                                         {{/if}}
                                                      </div>
                                                   </td>
                                                </tr>
                                             {{/each}}
                                          </tbody>
                                       </table>
                                    </div>
                                    <div class="row">
                                       <!-- Dropdown chọn số lượng bản ghi -->
                                       <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start dt-toolbar">
                                          <div class="menu-item px-3">
                                             <a href="#" class="btn btn-sm btn-light btn-flex btn-center btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end"> Show <span id="record-limit-text" class="ms-2">10</span>
                                                <i class="fa-solid fa-caret-down ms-2"></i>
                                             </a>
                                             <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-150px py-4" data-kt-menu="true">
                                                <div class="menu-item px-3">
                                                   <a href="javascript:void(0)" class="menu-link px-3" onclick="setRecordLimit(10)">10 bản ghi</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                   <a href="javascript:void(0)" class="menu-link px-3" onclick="setRecordLimit(25)">25 bản ghi</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                   <a href="javascript:void(0)" class="menu-link px-3" onclick="setRecordLimit(50)">50 bản ghi</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                   <a href="javascript:void(0)" class="menu-link px-3" onclick="setRecordLimit(100)">100 bản ghi</a>
                                                </div>
                                                <div class="menu-item px-3">
                                                   <a href="javascript:void(0)" class="menu-link px-3" onclick="setRecordLimit('all')">Tất cả</a>
                                                </div>
                                             </div>
                                          </div>
                                       </div>
                                       <!-- Phân trang -->
                                       <div class="col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end">
                                          <div class="dt-paging paging_simple_numbers">
                                             <nav aria-label="pagination">
                                                <ul class="pagination">
                                                   <!-- JavaScript sẽ tự sinh nút phân trang tại đây -->
                                                </ul>
                                             </nav>
                                          </div>
                                       </div>
                                    </div>
                                 </div>
                                 <!--end::Table-->
                                 <!-- Modal -->
                                 <div class="modal fade" id="userDetailModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg">
                                       <div class="modal-content">
                                          <div class="modal-header">
                                             <h5 class="modal-title d-flex align-items-center gap-3"> Thông tin người dùng <span id="modalStatus" class="badge align-middle"></span>
                                             </h5>
                                             <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                          </div>
                                          <div class="modal-body">
                                             <div class="row g-4">
                                                <!-- Avatar -->
                                                <div class="col-12 text-center">
                                                   <img id="modalAvatar" src="" alt="Avatar" class="rounded-circle" width="100" height="100">
                                                </div>
                                                <!-- Name -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Họ tên</label>
                                                   <input type="text" id="modalName" class="form-control" readonly>
                                                </div>
                                                <!-- Username -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Tên người dùng</label>
                                                   <input type="text" id="modalUsername" class="form-control" readonly>
                                                </div>
                                                <!-- Email -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Email</label>
                                                   <input type="text" id="modalEmail" class="form-control" readonly>
                                                </div>
                                                <!-- Giới tính -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Giới tính</label>
                                                   <input type="text" id="modalGender" class="form-control" readonly>
                                                </div>
                                                <!-- Level -->
                                                <div class="col-md-4">
                                                   <label class="form-label">Cấp bậc (Level)</label>
                                                   <input type="text" id="modalLevel" class="form-control" readonly>
                                                </div>
                                                <!-- Role -->
                                                <div class="col-md-4">
                                                   <label class="form-label">Vai trò (Role)</label>
                                                   <input type="text" id="modalRole" class="form-control" readonly>
                                                </div>
                                                <!-- Provider -->
                                                <div class="col-md-4">
                                                   <label class="form-label">Provider</label>
                                                   <input type="text" id="modalProvider" class="form-control" readonly>
                                                </div>
                                                <!-- Tổng nạp -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Tổng đã nạp</label>
                                                   <input type="text" id="modalDeposit" class="form-control" readonly>
                                                </div>
                                                <!-- Số dư hiện tại -->
                                                <div class="col-md-6">
                                                   <label class="form-label">Tiền hiện có</label>
                                                   <input type="text" id="modalMoney" class="form-control" readonly>
                                                </div>
                                                <!-- Token -->
                                                <div class="col-md-12">
                                                   <label class="form-label">Token</label>
                                                   <textarea id="modalToken" class="form-control" rows="2" readonly></textarea>
                                                </div>
                                             </div>
                                          </div>
                                       </div>
                                    </div>
                                 </div>
                                 <div id="balanceModal" class="modal fade" tabindex="-1">
                                    <div class="modal-dialog modal-dialog-centered">
                                       <div class="modal-content">
                                          <div class="modal-header">
                                             <h5 class="modal-title">Cập nhật số dư</h5>
                                             <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                          </div>
                                          <div class="modal-body">
                                             <input type="hidden" id="balance-user-id" />
                                             <div class="mb-3">
                                                <label>Email người dùng:</label>
                                                <input type="text" id="balance-user-email" class="form-control" disabled />
                                             </div>
                                             <div class="mb-3">
                                                <label>Số tiền (có thể âm để trừ):</label>
                                                <input type="text" id="balance-amount" class="form-control" placeholder="VD: 100,000 hoặc -5,000" oninput="formatMoneyInput(this)" onkeydown="handleBalanceKey(event)" />
                                             </div>
                                          </div>
                                          <div class="modal-footer">
                                             <button onclick="submitBalance()" class="btn btn-primary">Xác nhận</button>
                                             <button class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                          </div>
                                       </div>
                                    </div>
                                 </div>
                                 <script>
                                    document.addEventListener("DOMContentLoaded", () => {
                                       // Mở modal xem thông tin chi tiết
                                       const showButtons = document.querySelectorAll(".btn-show-user");
                                       showButtons.forEach((btn) => {
                                          btn.addEventListener("click", async (e) => {
                                             e.preventDefault();
                                             const userId = btn.dataset.userId;
                                             try {
                                                const res = await fetch(`/admin/userM/${userId}`);
                                                const {
                                                   data
                                                } = await res.json();
                                                document.getElementById("modalName").value = data.name;
                                                document.getElementById("modalUsername").value = data.username;
                                                document.getElementById("modalEmail").value = data.email;
                                                document.getElementById("modalGender").value = data.gender;
                                                document.getElementById("modalLevel").value = data.level;
                                                document.getElementById("modalRole").value = data.role;
                                                document.getElementById("modalProvider").value = data.provider;
                                                document.getElementById("modalDeposit").value = data.totalDeposit;
                                                document.getElementById("modalMoney").value = data.currentMoney;
                                                document.getElementById("modalToken").value = data.token;
                                                document.getElementById("modalAvatar").src = data.avatarUrl;
                                                const statusEl = document.getElementById("modalStatus");
                                                statusEl.textContent = data.isBanned ? "Banned" : "Active";
                                                statusEl.className = "badge " + (data.isBanned ? "badge-danger" : "badge-success");
                                                const modal = new bootstrap.Modal(document.getElementById("userDetailModal"));
                                                modal.show();
                                             } catch (err) {
                                                console.error("Error fetching user:", err);
                                                alert("Không thể tải thông tin người dùng.");
                                             }
                                          });
                                       }); 
                                    });
 
                                    document.addEventListener("DOMContentLoaded", () => {
                                       const table = document.querySelector("#kt_ecommerce_products_table");
                                       const tbody = table.querySelector("tbody");
                                       const headers = table.querySelectorAll("thead th");

                                       // Chỉ cho phép sort các cột: User (1), Email (2), Gender (3), Level (4)
                                       const sortableCols = [1, 2, 3, 4];

                                       headers.forEach((header, colIndex) => {
                                          if (!sortableCols.includes(colIndex)) return;

                                          header.style.cursor = "pointer";

                                          header.addEventListener("click", () => {
                                                const currentSort = header.getAttribute("data-sort") || "asc";
                                                const nextSort = currentSort === "asc" ? "desc" : "asc";

                                                // Reset sort
                                                headers.forEach(h => h.removeAttribute("data-sort"));
                                                header.setAttribute("data-sort", nextSort);

                                                // Get all rows
                                                const rows = Array.from(tbody.querySelectorAll("tr"));

                                                rows.sort((a, b) => {
                                                   const aCell = a.querySelector(`td:nth-child(${colIndex + 1})`);
                                                   const bCell = b.querySelector(`td:nth-child(${colIndex + 1})`);

                                                   let aText = aCell?.innerText.trim().toLowerCase() || "";
                                                   let bText = bCell?.innerText.trim().toLowerCase() || "";

                                                   // Xử lý đặc biệt cho Gender (index 3) và Level (index 4)
                                                   if (colIndex === 3) {
                                                      aText = convertGender(aText);
                                                      bText = convertGender(bText);
                                                   } else if (colIndex === 4) {
                                                      aText = convertLevel(aText);
                                                      bText = convertLevel(bText);
                                                   }

                                                   if (aText < bText) return nextSort === "asc" ? -1 : 1;
                                                   if (aText > bText) return nextSort === "asc" ? 1 : -1;
                                                   return 0;
                                                });

                                                // Gắn lại tbody
                                                tbody.innerHTML = "";
                                                rows.forEach(row => tbody.appendChild(row));
                                          });
                                       });

                                       // Convert gender text to sortable number
                                       function convertGender(text) {
                                          if (text.includes("male")) return "1";
                                          if (text.includes("female")) return "2";
                                          return "3";
                                       }

                                       // Convert level text to sortable number
                                       function convertLevel(text) {
                                          const map = {
                                                "mặc định": 1,
                                                "rank đồng": 2,
                                                "rank bạc": 3,
                                                "rank vàng": 4,
                                                "khách vip": 5
                                          };
                                          const key = text.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "").trim();
                                          return map[key] || 99;
                                       }
                                    }); 

                                    document.addEventListener("DOMContentLoaded", () => {
                                       const tableBody = document.querySelector("#kt_ecommerce_products_table tbody");
                                       const allRows = Array.from(tableBody.querySelectorAll("tr"));
                                       const paginationContainer = document.querySelector(".pagination");
                                       const recordLimitText = document.getElementById("record-limit-text");
                                       let pageSize = 10;
                                       let currentPage = 1;
                                       let rows = [...allRows]; // Có thể cập nhật lại sau khi lọc
                                       function setRecordLimit(limit) {
                                          if (limit === 'all') {
                                             pageSize = rows.length;
                                          } else {
                                             pageSize = parseInt(limit);
                                          }
                                          recordLimitText.textContent = limit === 'all' ? 'Tất cả' : limit;
                                          currentPage = 1;
                                          updatePagination();
                                       }

                                       function showRowsByPage() {
                                          const start = (currentPage - 1) * pageSize;
                                          const end = start + pageSize;
                                          rows.forEach((row, index) => {
                                             row.style.display = (index >= start && index < end) ? "" : "none";
                                          });
                                       }

                                       function renderPagination() {
                                          const totalPages = Math.ceil(rows.length / pageSize);
                                          paginationContainer.innerHTML = "";
                                          const createPageItem = (label, disabled, onClick) => {
                                             const li = document.createElement("li");
                                             li.className = `page-item ${disabled ? "disabled" : ""}`;
                                             li.innerHTML = `
																																	<button class="page-link">${label}</button>`;
                                             li.onclick = onClick;
                                             return li;
                                          };
                                          paginationContainer.appendChild(createPageItem("«", currentPage === 1, () => {
                                             if (currentPage > 1) {
                                                currentPage--;
                                                updatePagination();
                                             }
                                          }));
                                          for (let i = 1; i <= totalPages; i++) {
                                             const li = document.createElement("li");
                                             li.className = `page-item ${i === currentPage ? "active" : ""}`;
                                             li.innerHTML = `
																																	<button class="page-link">${i}</button>`;
                                             li.onclick = () => {
                                                currentPage = i;
                                                updatePagination();
                                             };
                                             paginationContainer.appendChild(li);
                                          }
                                          paginationContainer.appendChild(createPageItem("»", currentPage === totalPages, () => {
                                             if (currentPage < totalPages) {
                                                currentPage++;
                                                updatePagination();
                                             }
                                          }));
                                       }

                                       function updatePagination() {
                                          showRowsByPage();
                                          renderPagination();
                                       }
                                       // Khởi tạo mặc định
                                       updatePagination();
                                       // Gắn hàm global để gọi từ HTML onclick
                                       window.setRecordLimit = setRecordLimit;
                                    });
                                    // ======================= BAN / UNBAN =======================
                                    async function banUser(userId) {
                                       const result = await Swal.fire({
                                          title: 'Xác nhận ban?',
                                          text: 'Người dùng sẽ bị chặn khỏi hệ thống!',
                                          icon: 'warning',
                                          showCancelButton: true,
                                          confirmButtonText: 'Ban',
                                          cancelButtonText: 'Hủy'
                                       });
                                       if (result.isConfirmed) {
                                          try {
                                             const response = await fetch(`/api/admin/users/${userId}/ban`, {
                                                method: 'POST',
                                                headers: {
                                                   'Content-Type': 'application/json'
                                                }
                                             });
                                             const data = await response.json();
                                             if (data.success) {
                                                Swal.fire('Thành công!', data.message, 'success').then(() => location.reload());
                                             } else {
                                                Swal.fire('Thất bại', data.message || 'Không thể ban người dùng.', 'error');
                                             }
                                          } catch (err) {
                                             Swal.fire('Lỗi', err.message || 'Lỗi khi gọi API', 'error');
                                          }
                                       }
                                    }
                                    async function unbanUser(userId) {
                                       const result = await Swal.fire({
                                          title: 'Xác nhận unban?',
                                          text: 'Người dùng sẽ được hoạt động lại bình thường!',
                                          icon: 'question',
                                          showCancelButton: true,
                                          confirmButtonText: 'Unban',
                                          cancelButtonText: 'Hủy'
                                       });
                                       if (result.isConfirmed) {
                                          try {
                                             const response = await fetch(`/api/admin/users/${userId}/unban`, {
                                                method: 'POST',
                                                headers: {
                                                   'Content-Type': 'application/json'
                                                }
                                             });
                                             const data = await response.json();
                                             if (data.success) {
                                                Swal.fire('Thành công!', data.message, 'success').then(() => location.reload());
                                             } else {
                                                Swal.fire('Thất bại', data.message || 'Không thể unban người dùng.', 'error');
                                             }
                                          } catch (err) {
                                             Swal.fire('Lỗi', err.message || 'Lỗi khi gọi API', 'error');
                                          }
                                       }
                                    }
                                    // ======================= BALANCE =======================
                                    function openBalanceModal(userId, email) {
                                       document.getElementById('balance-user-id').value = userId;
                                       document.getElementById('balance-user-email').value = email;
                                       document.getElementById('balance-amount').value = '';
                                       const modal = new bootstrap.Modal(document.getElementById('balanceModal'));
                                       modal.show();
                                       setTimeout(() => {
                                          document.getElementById('balance-amount').focus();
                                       }, 300);
                                    }

                                    function formatMoneyInput(input) {
                                       let value = input.value.replace(/,/g, '');
                                       if (isNaN(value)) return;
                                       const number = parseFloat(value);
                                       input.value = number.toLocaleString('en-US');
                                    }

                                    function parseMoneyInput(inputId) {
                                       const raw = document.getElementById(inputId).value.replace(/,/g, '');
                                       return parseFloat(raw);
                                    }

                                    function handleBalanceKey(e) {
                                       if (e.key === 'Enter') {
                                          e.preventDefault();
                                          submitBalance();
                                       }
                                    }
                                    async function submitBalance() {
                                       const userId = document.getElementById('balance-user-id').value;
                                       const amount = parseMoneyInput('balance-amount');
                                       if (isNaN(amount)) {
                                          return Swal.fire('Lỗi', 'Vui lòng nhập số tiền hợp lệ!', 'error');
                                       }
                                       try {
                                          const res = await fetch(`/api/admin/users/${userId}/balance`, {
                                             method: 'POST',
                                             headers: {
                                                'Content-Type': 'application/json'
                                             },
                                             body: JSON.stringify({
                                                amount
                                             })
                                          });
                                          const result = await res.json();
                                          if (result.success) {
                                             const modal = bootstrap.Modal.getInstance(document.getElementById('balanceModal'));
                                             modal.hide();
                                             Swal.fire('Thành công', result.message, 'success').then(() => location.reload());
                                          } else {
                                             Swal.fire('Lỗi', result.message || 'Có lỗi xảy ra', 'error');
                                          }
                                       } catch (err) {
                                          Swal.fire('Lỗi', err.message, 'error');
                                       }
                                    }
                                    document.addEventListener("DOMContentLoaded", () => {
                                       const table = document.querySelector("#kt_ecommerce_products_table");
                                       const tbody = table.querySelector("tbody");
                                       const rows = Array.from(tbody.querySelectorAll("tr"));
                                       const searchInput = document.getElementById("search-input");
                                       // Gán data-col để dễ xử lý
                                       rows.forEach(row => {
                                          const cells = row.querySelectorAll("td");
                                          cells[1]?.setAttribute("data-col", "name");
                                          cells[2]?.setAttribute("data-col", "email");
                                       });
                                       // Lọc theo tìm kiếm
                                       function filterBySearch(row, searchTerm) {
                                          const name = row.querySelector("td[data-col='name']")?.innerText.toLowerCase() || "";
                                          const email = row.querySelector("td[data-col='email']")?.innerText.toLowerCase() || "";
                                          return name.includes(searchTerm) || email.includes(searchTerm);
                                       }

                                       function renderFilter() {
                                          const search = searchInput?.value.toLowerCase() || "";
                                          const filteredRows = rows.filter(row => filterBySearch(row, search));
                                          tbody.innerHTML = "";
                                          filteredRows.forEach(row => tbody.appendChild(row));
                                       }
                                       searchInput?.addEventListener("input", renderFilter);
                                       renderFilter(); // Lọc mặc định khi load trang
                                    });
                                    document.addEventListener("DOMContentLoaded", () => {
                                       const table = document.querySelector("#kt_ecommerce_products_table");
                                       const tbody = table.querySelector("tbody");
                                       const allRows = Array.from(tbody.querySelectorAll("tr"));
                                       // Gán data-col để dễ truy xuất
                                       allRows.forEach(row => {
                                          const cells = row.querySelectorAll("td");
                                          cells[1]?.setAttribute("data-col", "name");
                                          cells[2]?.setAttribute("data-col", "email");
                                          cells[5]?.setAttribute("data-col", "balance");
                                          cells[6]?.setAttribute("data-col", "status");
                                       });
                                       let currentStatusFilter = "all";
                                       let currentBalanceSort = "default";

                                       function cleanMoney(text) {
                                          return parseFloat(text.replace(/[^\d.-]/g, "")) || 0;
                                       }

                                       function renderTable() {
                                          let rows = [...allRows];
                                          // Lọc theo trạng thái
                                          if (currentStatusFilter !== "all") {
                                             rows = rows.filter(row => {
                                                const status = row.querySelector("td[data-col='status']")?.innerText.toLowerCase() || "";
                                                return (
                                                   (currentStatusFilter === "active" && status.includes("active")) || (currentStatusFilter === "banned" && status.includes("banned")));
                                             });
                                          }
                                          // Sắp xếp theo số dư
                                          if (currentBalanceSort !== "default") {
                                             rows.sort((a, b) => {
                                                const aBalance = cleanMoney(a.querySelector("td[data-col='balance']")?.innerText || "0");
                                                const bBalance = cleanMoney(b.querySelector("td[data-col='balance']")?.innerText || "0");
                                                return currentBalanceSort === "asc" ? aBalance - bBalance : bBalance - aBalance;
                                             });
                                          }
                                          // Gắn lại tbody
                                          tbody.innerHTML = "";
                                          rows.forEach(row => tbody.appendChild(row));
                                       }
                                       // Hàm gọi từ HTML
                                       window.filterBalance = function(sortOrder) {
                                          currentBalanceSort = sortOrder; // 'asc' | 'desc'
                                          renderTable();
                                       };
                                       window.filterStatus = function(status) {
                                          currentStatusFilter = status; // 'active' | 'banned' | 'all'
                                          renderTable();
                                       };
                                       // Hàm Reset bộ lọc
                                       window.resetFilters = function() {
                                          currentStatusFilter = "all";
                                          currentBalanceSort = "default";
                                          renderTable();
                                       };
                                       // Gọi lần đầu để hiển thị đúng
                                       renderTable();
                                    });
                                    let cachedUserStats = null;
                                    // Hàm hiệu ứng đếm số
                                    function animateCounter(element, endValue, duration = 1000) {
                                       const startValue = 0;
                                       const startTime = performance.now();

                                       function update(currentTime) {
                                          const elapsed = currentTime - startTime;
                                          const progress = Math.min(elapsed / duration, 1);
                                          const current = Math.floor(progress * endValue);
                                          element.innerText = current.toLocaleString("vi-VN");
                                          if (progress < 1) {
                                             requestAnimationFrame(update);
                                          }
                                       }
                                       requestAnimationFrame(update);
                                    }
                                    async function fetchUserStats() {
                                       try {
                                          const res = await fetch("/api/admin/users/stats");
                                          const {
                                             success,
                                             data
                                          } = await res.json();
                                          if (success && data) {
                                             // Gán số liệu bằng counter
                                             animateCounter(document.getElementById("stat-totalUsers"), data.totalUsers);
                                             animateCounter(document.getElementById("stat-activeUsers"), data.activeUsers);
                                             animateCounter(document.getElementById("stat-bannedUsers"), data.bannedUsers);
                                             animateCounter(document.getElementById("stat-balance"), data.totalBalance);
                                             // Cache dữ liệu để xử lý user mới theo filter
                                             cachedUserStats = data;
                                             // Gán mặc định là hôm nay
                                             updateNewUserStat("today");
                                          }
                                       } catch (err) {
                                          console.error("Lỗi khi lấy thống kê:", err);
                                       }
                                    }

                                    function updateNewUserStat(type) {
                                       if (!cachedUserStats) return;
                                       let value = 0;
                                       switch (type) {
                                          case "today":
                                             value = cachedUserStats.newUsersToday;
                                             break;
                                          case "month":
                                             value = cachedUserStats.newUsersThisMonth;
                                             break;
                                          case "year":
                                             value = cachedUserStats.newUsersThisYear;
                                             break;
                                       }
                                       animateCounter(document.getElementById("stat-newUsers"), value);
                                    }
                                    // Trigger từ menu filter Metronic
                                    function selectNewUserFilter(type) {
                                       updateNewUserStat(type);
                                    }
                                    // Gọi khi trang load
                                    fetchUserStats();
                                 </script>
                              </div>
                              <!--end::Card body-->
                           </div>
                           <!--end::Products-->
                           <!--end::Content container-->
                        </div>
                        <!--end::Content container-->
                     </div>
                     <!--end::Content-->
                  </div>
                  <!--end::Content wrapper-->
                  <!--begin::Footer-->
                  {{> footerAD }}
                  <!--end::Footer-->
               </div>
               <!--end:::Main-->
            </div>
            <!--end::Wrapper-->
         </div>
         <!--end::Page-->
      </div>
      <!--end::App-->
      {{> scripts }}
   </body>
   <!--end::Body-->
</html>